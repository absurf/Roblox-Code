-- Local Script

local character = script.Parent



local uip = game:GetService("UserInputService")

local RemoteEvent = game:GetService("ReplicatedStorage").RemoteEvent

local debounce = false

uip.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	
	if input.KeyCode == Enum.KeyCode.E and debounce == false then
		debounce = true
		
		
		local data = {
			["Action"] = "WarWick",
		}
		
		RemoteEvent:FireServer(data)
		
		
		
		task.wait(2)
		debounce = false
		
	end
end)


-- ServerSide
local RemoteEvent = game.ReplicatedStorage.RemoteEvent

local TS = game:GetService('TweenService')

local WarwickLunge = game.ServerStorage.WarWickLunge
local WarwickScratch = game.ServerStorage.WarWickScratching

RemoteEvent.OnServerEvent:Connect(function(player, data)
	if data.Action == "WarWick" then
		local character = game.Workspace[player.Name]
		
		local DamageValue = 5
		
		local Time = 0.5
		
		--THIS GOES 40/0.5, 40 studs per 0.5 seconds
		
		local PathEnd = Instance.new("Part", game.Workspace)
		PathEnd.Anchored = true
		PathEnd.Transparency = 1
		PathEnd.CanCollide = false
		PathEnd.CFrame = character.HumanoidRootPart.CFrame * CFrame.new(0,0,-40)
		
		
		
		local PartBelow = Instance.new("Part", game.Workspace)
		PartBelow.Anchored = true
		PartBelow.Transparency = 1
		PartBelow.CanCollide = false
		PartBelow.CFrame = character.HumanoidRootPart.CFrame * CFrame.new(0,0,0)
		
		
		
		local weld = Instance.new("Weld", character.HumanoidRootPart)
		weld.Part0 = PartBelow
		weld.Part1 = character.HumanoidRootPart
		
		
		
		local RayCastParams = RaycastParams.new()
		RayCastParams.FilterType = Enum.RaycastFilterType.Blacklist
		RayCastParams.FilterDescendantsInstances = {PartBelow, PathEnd, character}
		
		local Raycast = game.Workspace:Raycast(PartBelow.Position , (PathEnd.Position - PartBelow.Position), RayCastParams)
		
		print(Raycast)
		
		local CharacterAnimator = character.Humanoid:FindFirstChild("Animator")
		
		local LoadAnimation = CharacterAnimator:LoadAnimation(WarwickLunge)
		
		LoadAnimation:Play()
		
		if Raycast then
			print(Raycast)
			
			local NewPathEnd = Instance.new("Part", game.Workspace)
			NewPathEnd.Position = Raycast.Position
			NewPathEnd.Anchored = true
			NewPathEnd.CanCollide = false
			NewPathEnd.Transparency = 1
			NewPathEnd.CanQuery = false
			print("Part Created")
			
			local TimeAmount = (NewPathEnd.Position - PartBelow.Position).Magnitude/80
			
			game.Debris:AddItem(PathEnd,TimeAmount)
			game.Debris:AddItem(PartBelow,TimeAmount)
			--game.Debris:AddItem(NewPathEnd,TimeAmount)
			
			--local TimeAmount = (NewPathEnd.Position - PartBelow.Position).Magnitude/80
			
		--	NewPathEnd.Orientation = Vector3.new(0,90,0)
			
		--	print( NewPathEnd.Position.Magnitude - PartBelow.Position.Magnitude )
		--	print((NewPathEnd.Position - PartBelow.Position).Magnitude)
			
			local TweenInformation = TweenInfo.new((NewPathEnd.Position - PartBelow.Position).Magnitude/68, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
			
			print((NewPathEnd.Position - PartBelow.Position).Magnitude/68)
		--	print((NewPathEnd.Position - PartBelow.Position).Magnitude/Time)
			--	print(80/(NewPathEnd.Position - PartBelow.Position).Magnitude)
			
			
		--	local updateConnection = 
			
			
			--print((NewPathEnd.Position - PartBelow.Position).Magnitude/80)
			--	local TweenPlay = TS:Create(PartBelow, TweenInformation, {Position = NewPathEnd.Position})
			local TweenPlay = TS:Create(PartBelow, TweenInformation, {Position = NewPathEnd.Position})

			TweenPlay:Play()
			
			--Find Humanoid
			task.wait(TimeAmount)
			if Raycast.Instance.Parent:FindFirstChild("Humanoid") then

				
				local EnemyCharacter = Raycast.Instance.Parent
				
				NewPathEnd.CFrame = EnemyCharacter.HumanoidRootPart.CFrame
				
				
				
				
				local NewWeld = Instance.new("Weld", character.HumanoidRootPart)
				NewWeld.Part0 = character.HumanoidRootPart
				NewWeld.Part1 = NewPathEnd
				NewWeld.C1 = CFrame.new(0,0,-3) * CFrame.Angles(0,math.rad(-180),0)
				
				local EnemyWeld = Instance.new("Weld", EnemyCharacter.HumanoidRootPart)
				EnemyWeld.Part0 = EnemyCharacter.HumanoidRootPart
				EnemyWeld.Part1 = NewPathEnd
				
				local CharacterAnimator = character.Humanoid:FindFirstChild("Animator")

				local LoadAnimation = CharacterAnimator:LoadAnimation(WarwickScratch)

				LoadAnimation:Play()
				
				
				
				for i = 1, 10 do
					task.wait(0.2)
					EnemyCharacter.Humanoid:TakeDamage(7)
					
					local RandomSlashOrientation = Vector3.new(math.random(0,90), math.random(0,90), math.random(0,90))
					
					for i,v in pairs(game.ServerStorage.Torso:GetChildren()) do
						if v:IsA("Attachment") then
							local clone = v:Clone()
							clone.Parent = EnemyCharacter.HumanoidRootPart
							clone.Orientation = RandomSlashOrientation
							delay(0.4, function()
								clone:Destroy()
								print("Destroyed")
							end)
						end
					end
					
					if character.Humanoid.Health <= 100 then
						character.Humanoid.Health += 7
					end
					
					--FIX CUZ WHENEVR THIS ISNT THERE THEN IT CAUSES BOTH TO DIE
					if EnemyCharacter.Humanoid.Health <= 0 then
						game.Debris:AddItem(EnemyWeld, 0)
					end
					
					
					
				end
				
				LoadAnimation:Stop()
				

				
				game.Debris:AddItem(NewWeld, 0)
				game.Debris:AddItem(EnemyWeld, 0)
				game.Debris:AddItem(NewPathEnd, 0)
				
				local BodyVelocity = Instance.new("BodyVelocity", EnemyCharacter.HumanoidRootPart)
				BodyVelocity.Velocity = character.HumanoidRootPart.CFrame.LookVector * 50
				BodyVelocity.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
				game.Debris:AddItem(BodyVelocity, 0.2)
				
				
				
				print("Hi")
			end
			
			
		else
			print((PathEnd.Position - PartBelow.Position).Magnitude)
			
			
			local TweenInformation = TweenInfo.new((PathEnd.Position - PartBelow.Position).Magnitude/((PathEnd.Position - PartBelow.Position).Magnitude * 1.7), Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
			print((PathEnd.Position - PartBelow.Position).Magnitude/((PathEnd.Position - PartBelow.Position).Magnitude * 1.7))
			--time should be 0.5
			print((PathEnd.Position - PartBelow.Position).Magnitude/((PathEnd.Position - PartBelow.Position).Magnitude * 1.7))
			
			local TweenPlay = TS:Create(PartBelow, TweenInformation, {Position = PathEnd.Position})

			TweenPlay:Play()
			print("Part2 part created")
			
			game.Debris:AddItem(PathEnd,(PathEnd.Position - PartBelow.Position).Magnitude/((PathEnd.Position - PartBelow.Position).Magnitude * 1.7))
			game.Debris:AddItem(PartBelow,(PathEnd.Position - PartBelow.Position).Magnitude/((PathEnd.Position - PartBelow.Position).Magnitude * 1.7))
		end
	end
end)


